@page "/communications/create"
@using SharedModels.DTOs
@using CommLifecycle.Web.Services
@inject MovieApiService _movieApiService
@inject NavigationManager _navigationManager
@rendermode InteractiveServer
@namespace CommLifecycle.Web.Components

@if (_types is not null)
{
    <EditForm Model="@_communication" OnValidSubmit="HandleValidSubmit" FormName="create" Enhance>
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Title</label>
            <InputText @bind-Value="_communication.Title" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Type</label>
            <InputSelect @bind-Value="_communication.CommunicationTypeId" class="form-select">
                <option value="">Select type</option>
                @foreach (var type in _types)
                {
                    <option value="@type.Id">@type.Name</option>
                }
            </InputSelect>
        </div>

        <p>debug: IsNull = @(_communication is null)</p>
        <p>debug: Title = @_communication.Title</p>
        <p>debug: Type ID = @_communication.CommunicationTypeId</p>
        <button class="btn btn-primary" type="submit">Add Communication</button>
    </EditForm>
} else {
    <Spinner />
}

@code {
    private CommunicationDto _communication = new();
    private List<CommunicationTypeDto> _types = new();

    protected override async Task OnInitializedAsync()
    {
        var types = await _movieApiService.GetCommunicationTypesAsync();
        if (types is not null) _types = types;
    }

    private async Task HandleValidSubmit()
    {
        Console.WriteLine($"communication title is {_communication.Title} and type id is {_communication.CommunicationTypeId} and regular ol' id is {_communication.Id}");
        await _movieApiService.CreateCommunicationAsync(_communication);
        _navigationManager.NavigateTo("/Communications");
    }
}