@page "/forum"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorApp1.Models
@using BlazorWebApp.Data
@using BlazorApp1.Services
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorWebApp.Data.BlazorWebAppContext> DbFactory
@inject IForumPostService ForumPostService

<PageTitle>Forum</PageTitle>

<h1>Forum</h1>

<p>
    <a href="forum/posts/create">Create New</a>
</p>

<div class="container">
    @foreach (var post in _posts)
    {
        <div class="post">
            <div class="upper-row">
                <div class="vote-arrow vote-arrow-up"></div>
                @post.Title
            </div>
            <div class="lower-row">
                <div class="vote-arrow vote-arrow-down"></div>
                @(post.Upvotes - post.Downvotes) votes by @(post.Author is not null ? post.Author.UserProfileId : "[deleted]") | <a href="forum/posts/p/@post.Id">comments</a> | @post.CreatedAt
            </div>
        </div>
    }
</div>

@code {
    private List<Post> _posts = new();

    protected override async Task OnInitializedAsync()
    {
        List<Post> posts = await ForumPostService.GetAllAsync();
        if (posts is not null) {
            _posts = posts;
        }
    }

    public async ValueTask DisposeAsync() => await ValueTask.CompletedTask;
}